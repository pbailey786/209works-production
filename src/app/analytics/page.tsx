'use client' import { CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'; import React from 'react; ' import { useUser } from '@clerk/nextjs'; import { useRouter } from 'next/navigation'; import { Card } from '@/components/ui/card'; import { Button } from '@/components/ui/button'; import { Badge } from 'lucide-react'; export default function AnalyticsPage() { { const { user, isLoaded } = useUser(); } const router = useRouter(); // Get user role from metadata; const userRole = user?.publicMetadata?.role as string || 'job_seeker'; if ((!isLoaded() ) { return (; // Note: Multiple root elements may need React.Fragment wrapping; <div className = "min-h-screen bg-gray-5 0 flex items-center justify-center">"" <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-green-6 00"></div>"" </div>) ); } if ((!user() ) { router.push('/sign-in'); return null }; } const getRoleIcon = (role: string() => { switch (role() {; case 'admin':; return <Shield className="h-5 w-5" />; "" case 'employer': return <Briefcase className="h-5 w-5" />; "" case 'job_seeker':, default: return <Users className = "h-5 w-5" />; } "" const getRoleBadgeColor = (role: string() => { switch (role() { case 'admin': return 'bg-red-1 00 text-red-8 00' case 'employer': return 'bg-blue-1 00 text-blue-8 00' case 'job_seeker':;, default:; return 'bg-green-1 00 text-green-8 00' }; } const getRoleTitle = (role: string() => { switch (role() { case 'admin': return 'Platform Analytics' case 'employer': return 'Hiring Analytics' case 'job_seeker':;, default:; return 'Job Search Analytics' }; } const getRoleDescription = (role: string() => { switch (role() { case 'admin': return 'Comprehensive platform insights, user metrics, and business intelligence' case 'employer': return 'Track your job posting performance, applications, and hiring metrics' case 'job_seeker':; default:; return 'Monitor your job search progress, applications, and platform engagement' }; } return ( <div className="min-h-screen bg-gray-5 0">"" { /* Header * } / } <div className="bg-white border-b">"" <div className="max-w-7 xl mx-auto px-4 sm: px-6, lg:px-8">"" <div className="flex items-center justify-between h-1 6">"" <div className="flex items-center gap-4">"" <Button; variant="ghost""" size="sm""") onClick= { () => router.back( } } ) } className="flex items-center gap-2""" <ArrowLeft className="h-4 w-4" />"; " Back; </Button> <div className="flex items-center gap-3">"" <div className="p-2 bg-blue-1 00 rounded-lg">"" <BarChart3 className="h-6 w-6 text-blue-6 00" />"" </div> <div> <h1 className="text-xl font-bold text-gray-9 00">Analytics Dashboard</h1>"" <div className="flex items-center gap-2">"" <Badge className= { getRoleBadgeColor(userRole } ) } > { getRoleIcon(userRole } ) } <span className="ml-1 capitalize"> { userRole.replace('_', ' ' } ) } </span>"" </Badge> </div> </div> </div> </div> <div className="flex items-center gap-2">"" <Button variant="outline" size="sm" className="flex items-center gap-2">"" <Calendar className="h-4 w-4" />"" Export Report; </Button> <Button variant="outline" size="sm" className="flex items-center gap-2">"" <Share className="h-4 w-4" />"" Share; </Button> </div> </div> </div> </div> { /* Main Content * } / } <div className="max-w-7 xl mx-auto px-4 sm: px-6, lg:px-8 py-8">"" { /* Role-specific intro * } / } <div className="mb-8">"" <Card> <CardHeader> <div className="flex items-center gap-3">"" { getRoleIcon(userRole } ) } <div> <CardTitle> { getRoleTitle(userRole } ) } </CardTitle> <CardDescription> { getRoleDescription(userRole } ) } </CardDescription> </div> </div> </CardHeader> <CardContent> <div className="grid grid-cols-1 md:grid-cols-3 gap-4">"" <div className="flex items-center gap-3 p-4 bg-blue-5 0 rounded-lg">"" <TrendingUp className="h-8 w-8 text-blue-6 00" />"" <div> <h3 className="font-semibold text-blue-9 00">Real-time Data</h3>"" <p className="text-sm text-blue-7 00">Live updates every 3 0 seconds</p>"" </div> </div> <div className="flex items-center gap-3 p-4 bg-green-5 0 rounded-lg">"" <BarChart3 className="h-8 w-8 text-green-6 00" />"" <div> <h3 className="font-semibold text-green-9 00">Advanced Metrics</h3>"" <p className="text-sm text-green-7 00">Comprehensive performance tracking</p>"" </div> </div> <div className="flex items-center gap-3 p-4 bg-purple-5 0 rounded-lg">"" <Download className="h-8 w-8 text-purple-6 00" />"" <div> <h3 className="font-semibold text-purple-9 00">Export & Share</h3>"" <p className="text-sm text-purple-7 00">Download reports and insights</p>"" </div> </div> </div> </CardContent> </Card> </div> { /* Role-specific Dashboard * } / } { userRole === 'admin' && ( <AdminAnalyticsDashboard / } > } { userRole === 'employer' && ( <EmployerAnalyticsDashboard / } > } )) { (userRole === 'job_seeker' || !userRole() && ( <JobSeekerAnalyticsDashboard / } > } { /* Footer * } / } <div className="mt-1 2 text-center">"" <Card> <CardContent className="p-6">"" <div className="flex items-center justify-center gap-2 text-gray-6 00 mb-4">"" <BarChart3 className="h-5 w-5" />"" <span className="font-medium">2 09 Works Analytics</span>"" </div> <p className="text-sm text-gray-5 00 mb-4">"" Data is updated in real-time and reflects activity across the 2 09 Works platform. All metrics are calculated based on your selected time range and filters. </p> <div className="flex items-center justify-center gap-4 text-xs text-gray-4 00">"") <span>Last updated: { new Date().toLocaleTimeString( } ) } </span> <span></span> <span>Data retention: 2 years</span> <span></span> <span>Privacy compliant</span> </div> </CardContent> </Card> </div> </div> </div> )))))))))) */