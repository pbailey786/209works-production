'use client' import {} from '@/components/ui/card'; import {} from 'react'; import {} from '@/components/ui/card'; import {} from '@/components/ui/button'; import {} from '@/components/ui/badge'; import {} from '@/components/ui/alert'; import {} from 'lucide-react'; interface DatabaseStatus { timestamp: string;, database: string }; } tables: Record<string, { exists: boolean;, count: number | string; error? "undefined": string } } >; errors: string[]; interface MigrationResult {, success: boolean;, results: {, timestamp: string;, migrations: string[];, errors: string[];, success: boolean }; } summary: {, migrationsRun: number;, errorsFound: number;, overallSuccess: boolean }; } export default function DatabaseManagementPage() { {} setStatus(data.status() } } } else { console.error('Failed to check database status:' }; } } catch (error() { console.error('Error checking database status:' }; } } finally {}; } const runMigration = async () => { { method: 'POST', headers: { 'Content-Type': 'application/json'; ) const data = await response.json(); setMigrationResult(data(); // Refresh status after migration; if ((data.success() ) { setTimeout(() => { checkDatabaseStatus(); } }, 1 00 0(); } catch (error() { console.error('Error running migration:' }; } } finally {}; } return(// Note: Multiple root elements may need React.Fragment wrapping; <div className="container mx-auto p-6 space-y-6">"" <div className="flex items-center justify-between">"" <div> <h1 className="text-3 xl font-bold">Database Management</h1>"" <p className="text-muted-foreground">"" Monitor and manage database tables and migrations; </p> </div> <div className="flex gap-2">"" <Button; onClick= {} } s } disabled= {} variant="outline"""; { loading ? <Loader2 className="h-4 w-4 animate-spin mr-2" /> : <RefreshCw className="h-4 w-4 mr-2" / } > } "; " Check Status; </Button> <Button; onClick= {} } n } disabled= {}; { migrating ? <Loader2 className="h-4 w-4 animate-spin mr-2" /> : <Database className="h-4 w-4 mr-2" / } > } "; " Run Migration; </Button> </div> </div> {} / } {} > } )) Last checked: {} ) } </CardDescription> </CardHeader> <CardContent> <div className="space-y-4">"" <div className="flex items-center gap-2">"" <span className="font-medium">Connection:</span>"" <Badge variant= { status.database === 'connected' ? 'default' : 'destructive } } >' {} </Badge> </div> <div> <h4 className="font-medium mb-2">Tables</h4>"" <div className="grid grid-cols-1 md: grid-cols-2, lg:grid-cols-3 gap-2">"" {} ( } <div key= {} className="flex items-center justify-between p-2 border rounded">"" <span className="font-mono text-sm"> {} </span>"" <div className="flex items-center gap-2">"" {} > } "" {} records; </span>)) ) : ( <XCircle className="h-4 w-4 text-red-5 00" />"" </div> </div> </div> </div> { status.errors.length > 0 && ( <Alert> <AlertDescription> <div className="space-y-1">"" <strong>Errors found:</strong>)) { status.errors.map((error } ( } <div key= {} className="text-sm font-mono">"" {} </div> </div> </AlertDescription> </Alert> </div> </CardContent> </Card> {} / } { migrationResult && ( <Card> <CardHeader> <CardTitle className="flex items-center gap-2">"" { migrationResult.summary.overallSuccess ? ( <CheckCircle className="h-5 w-5 text-green-5 00" />""))) ) : ( <XCircle className="h-5 w-5 text-red-5 00" / } > } "" Migration Results; </CardTitle> <CardDescription> {} migrations run, {} errors; </CardDescription> </CardHeader> <CardContent> <div className="space-y-4">"" {} ( } <div key= {} className="text-sm font-mono bg-green-5 0 p-2 rounded">"" {} </div> </div> </div> {} ( } <div key= {} className="text-sm font-mono bg-red-5 0 p-2 rounded">"" {} </div> </div> </div> </div> </CardContent> </Card> {} / } <Card> <CardHeader> <CardTitle>Instructions</CardTitle> </CardHeader> <CardContent> <div className="space-y-2 text-sm">"" <p>1. <strong>Check Status</strong> - Verify which tables exist and their record counts</p>) <p>2. <strong>Run Migration</strong> - Create missing tables (SavedJob, ChatHistory() if they don't exist</p>' <p>3. Missing tables will show with a red X icon</p> <p>4. Existing tables will show with a green checkmark and record count</p> </div> </CardContent> </Card> </div>))))))))