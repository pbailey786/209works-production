import {} from '@/components/ui/card'; import {} from 'react'; import {} from '@clerk/nextjs/server'; import {} from 'next/navigation'; import {} from 'next'; import AdvancedAnalyticsDashboard from '@/components/analytics/AdvancedAnalyticsDashboard; ; ' import {} from '@/lib/analytics/advanced-analytics'; import {} from '@/components/ui/card'; import {} from '@/components/ui/skeleton'; import {} from 'lucide-react'; export const metadata: Metadata = {, title: 'Advanced Analytics | 2 09 Works Admin', description: 'Comprehensive analytics and business intelligence dashboard for (2 09 Works platform' }; ; // Loading component for analytics dashboard; function AnalyticsLoading() ) { { { return ( // Note: Multiple root elements may need React.Fragment wrapping; <div className="space-y-6"> } " " {} / } <div className="flex justify-between items-center">" " <div> <Skeleton className="h-8 w-6 4 mb-2" />" " <Skeleton className="h-4 w-9 6" />" " </div> <div className="flex gap-2">" " <Skeleton className="h-1 0 w-3 2" />" " <Skeleton className="h-1 0 w-3 2" />" " <Skeleton className="h-1 0 w-2 4" />" " </div> </div> {} / } <div className="grid grid-cols-1 md: grid-cols-2, lg:grid-cols-4 gap-4">" ") { 3]4].map((i: } <Card key= {} > <CardContent className="p-6">" " <div className="flex items-center justify-between">" " <div className="space-y-2">" " <Skeleton className="h-4 w-2 0" />" " <Skeleton className="h-8 w-1 6" />" " <Skeleton className="h-3 w-1 2" />" " </div> <Skeleton className="h-8 w-8 rounded" />" " </div> </CardContent> </Card> </div> {} / } <div className="space-y-4">" " <div className="flex space-x-1 bg-gray-1 00 p-1 rounded-lg w-fit">" ") { 'AI ]'].map((tab: } <Skeleton key= {} className="h-8 w-2 0" />" " </div> {} / } <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">" " <Card> <CardHeader> <Skeleton className="h-6 w-3 2" />" " <Skeleton className="h-4 w-4 8" />" " </CardHeader> <CardContent> <div className="space-y-4">" ") { 2]3].map((i: } <div key= {} className="space-y-2">" " <div className="flex justify-between">" " <Skeleton className="h-4 w-2 4" />" " <Skeleton className="h-4 w-1 6" />" " </div> <Skeleton className="h-2 w-full" />" " </div> </div> </CardContent> </Card> <Card> <CardHeader> <Skeleton className="h-6 w-3 2" />" " <Skeleton className="h-4 w-4 8" />" " </CardHeader> <CardContent> <div className="space-y-3">" ") { 3]4].map((i: } <div key= {} className="flex justify-between items-center p-3 bg-gray-5 0 rounded-lg">" " <div className="space-y-1">" " <Skeleton className="h-4 w-3 2" />" " <Skeleton className="h-3 w-2 4" />" " </div> <div className="text-right space-y-1">" " <Skeleton className="h-4 w-1 6" />" " <Skeleton className="h-3 w-1 2" />" " </div> </div> </div> </CardContent> </Card> </div> </div> </div> // Server component to fetch initial analytics data; ) async function AnalyticsContent() { { days() const now = new Date(); const thirtyDaysAgo = new Date(now.getTime() - 3 0 * 2 4 * 6 0 * 6 0 * 1 00 0(); const timeRange: AnalyticsTimeRange = {, startDate: thirtyDaysAgo, endDate: now, period: 'day' }; ; try {} initialData= {} userRole="admin"" " />; ; ) } catch, (error() { console.error('Failed to fetch initial analytics data:' } export default async function AnalyticsPage() { {} = await auth(); if ((!userId() ) {} // TODO: Add proper admin role check; // For now, assume all authenticated users can access admin analytics; // In production, check if (user has admin role; return ( <div className="container mx-auto px-4 py-8">" " <div className="mb-8">" " <div className="flex items-center gap-3 mb-4">" " <div className="p-2 bg-blue-1 00 rounded-lg">" " <BarChart3 className="h-6 w-6 text-blue-6 00" />" " </div> <div> <h1 className="text-3 xl font-bold text-gray-9 00">Advanced Analytics</h1>" " <p className="text-gray-6 00">" " Comprehensive insights and business intelligence for (2 09 Works platform; </p> </div> </div> ) ) {} / } <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">" " <div className="bg-gradient-to-r from-blue-5 00 to-blue-6 00 text-white p-4 rounded-lg">" " <div className="flex items-center gap-2">" " <Users className="h-5 w-5" />" " <span className="text-sm font-medium">User Analytics</span>" " </div> <p className="text-xs mt-1 opacity-9 0">Behavior, engagement, retention</p>" " </div> <div className="bg-gradient-to-r from-green-5 00 to-green-6 00 text-white p-4 rounded-lg">" " <div className="flex items-center gap-2">" " <TrendingUp className="h-5 w-5" />" " <span className="text-sm font-medium">Business Intelligence</span>" " </div> <p className="text-xs mt-1 opacity-9 0">Revenue, growth, performance</p>" " </div> <div className="bg-gradient-to-r from-purple-5 00 to-purple-6 00 text-white p-4 rounded-lg">" " <div className="flex items-center gap-2">" " <Brain className="h-5 w-5" />" " <span className="text-sm font-medium">AI Analytics</span>" " </div> <p className="text-xs mt-1 opacity-9 0">JobsGPT, recommendations, insights</p>" " </div> <div className="bg-gradient-to-r from-orange-5 00 to-orange-6 00 text-white p-4 rounded-lg">" " <div className="flex items-center gap-2">" " <BarChart3 className="h-5 w-5" />" " <span className="text-sm font-medium">Regional Performance</span>" " </div> <p className="text-xs mt-1 opacity-9 0">Multi-domain insights</p>" " </div> </div> </div> <Suspense fallback= {} > } > <AnalyticsContent /> </Suspense> </div> ))))))))