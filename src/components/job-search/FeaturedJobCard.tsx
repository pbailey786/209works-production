import { cn } from '@/lib/utils'; import React, { useState } from '@/components/ui/card'; import { motion } from '@/components/ui/card'; import { Button } from '@/components/ui/button'; import { Badge } from '@/components/ui/badge'; import { cn } from '@/components/ui/card'; import { FeaturedBadgeFloating } from './FeaturedJobBadge'; import {} MapPin, Clock, DollarSign, Bookmark, ExternalLink, Building2, Calendar, Eye, ChevronRight, CheckCircle, TrendingUp, Users } } from 'lucide-react '; interface FeaturedJobCardProps { id: string; title: string; company: string;, location: string;, type: string; salary? "undefined": string;, postedAt: string;, description: string;, applyUrl: string; isFeatured? "undefined": boolean; isRemote? "undefined": boolean; experienceLevel? "undefined": string; saved? "undefined": boolean; applied? "undefined": boolean; applicationStatus? "undefined": 'pending' | 'reviewing' | 'interview' | 'offer' | 'rejected' | 'withdrawn ' appliedAt? "undefined": string; onSave? "undefined": () => void; onViewDetails? "undefined": () => void; className? "undefined": string; // Analytics props (optional() viewCount? "undefined": number; applicantCount? "undefined": number; } export default function FeaturedJobCard() { ) } : FeaturedJobCardProps() { const [ isHovered, setIsHovere ]d] = useState(false(); const [ isSaving, setIsSavin ]g] = useState(false(); const handleSave = async () => {; ; if ((!onSave || isSaving || saved() return; setIsSaving(true(); try ) { await onSave(); } } catch (error() { console.error('Failed to save job:', error(); } } finally { setIsSaving(false(); } const formatPostedDate = (dateString: string() => { const date = new Date(dateString(); const now = new Date(); const diffTime = Math.abs(now.getTime() - date.getTime()); const diffDays = Math.ceil(diffTime / (1 00 0 * 6 0 * 6 0 * 2 4()); if ((diffDays === 1() return '1 day ago'; } if (diffDays < 7() return `$ ) { diffDa } days ago`; if ((diffDays < 3 0() return `$ ) { Math.ceil(diffDays / } 7 } weeks ago`; return `$ { Math.ceil(diffDays / } 0 } months ago`; return ( // Note: Multiple root elements may need React.Fragment wrapping; <motion.article; layout; initial= { {, opacity: 0, y: 2 0 } } } animate= { { opacity: 1, y: 0 } } } exit= { { opacity: 0, y: -2 0 } } } ))) whileHover= { { y: -4, scale: 1.0 2 } ) onHoverStart= { () => setIsHovered(true } ) } onHoverEnd= { () => setIsHovered(false } ) } className= { cn('relative rounded-2 xl border bg-white p-6 transition-all duration-3 00', 'group cursor-pointer hover:shadow-2 xl', // Featured job styling; isFeatured ? [ 'border-yellow-3 00 bg-gradient-to-br from-yellow-5 0 via-white to-orange-5 0', 'ring-2 ring-yellow-4 00 ring-opacity-3 0', 'shadow-lg shadow-yellow-1 00', 'hover: ring-opacity-5 0, hover:shadow-yellow-2 00'] ] : [ 'border-gray-2 00, hover:border-gray-3 00, hover:shadow-xl'] ], ) className; )) onClick= { onViewDetail } } s } { /* Featured Badge * } / } { isFeatured && (; <FeaturedBadgeFloating; className="animate-pulse hover:animate-none"" " /> } { /* Applied Badge * } / } { applied && ( } <div className= { `absolute $ { isFeatured ? '-left-2 -top-2' : '-right-2 -top- } } z-1 0` } > ' <div className="flex items-center gap-1 rounded-full bg-gradient-to-r from-green-5 00 to-green-6 00 px-3 py-1 text-xs font-bold text-white shadow-lg">" " <CheckCircle className="h-3 w-3" />"; " Applied; </div> </div> { /* Premium Visual Indicator for (Featured Jobs * } / } ) { isFeatured && ( <div className="absolute inset-0 rounded-2 xl bg-gradient-to-br from-yellow-4 00/5 via-transparent to-orange-4 00/5 pointer-events-none" /> } " " { /* Header * } / } <div className="mb-4 flex items-start justify-between">" " <div className="min-w-0 flex-1">" " <h3 className= { cn('mb-2 line-clamp-2 text-xl font-bold transition-colors group-hover:text-[#2 d4, a3 ]e]', isFeatured ? 'text-gray-9 00' : 'text-gray-9 00' } )))) } ) ) } > { title } </h3> <div className="mb-2 flex items-center gap-2 text-gray-6 00">" " <Building2 className="h-4 w-4 flex-shrink-0" />" " <span className="truncate font-medium"> { company } </span>" " { isFeatured && ( <Badge; variant="secondary" " " className="bg-yellow-1 00 text-yellow-8 00 border-yellow-2 00"" " <TrendingUp className="h-3 w-3 mr-1" />"; " Boosted; </Badge> } </div> </div> { /* Save Button * } / } <Button; variant="ghost"" " size="icon"" ") onClick= { (e() => {; e.stopPropagation(); handleSave(); } } disabled= { isSaving } className= { cn('h-1 0 w-1 0 rounded-full transition-all duration-2 00', ; saved; ? 'bg-[#9, fdf9 ]f]/2 0 text-[#2 d4, a3 ]e] hover: bg-[#9, fdf9 ]f]/3 0' : 'text-gray-4 00, hover:bg-[#2 d4, a3 ]e]/5, hover:text-[#2 d4, a3 ]e]' } ) } ) { isSaving ? ( <div className="h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent" />" ") ) : ( } ) <Bookmark className= { cn('h-4 w-4', saved && 'fill-current' } ) } /> </Button> </div> { /* Job Details * } / } <div className="mb-4 space-y-3">" " { /* Location and Remote * } / } <div className="flex items-center gap-4 text-sm text-gray-6 00">" " <div className="flex items-center gap-1">" " <MapPin className="h-4 w-4" />" " <span> { location } </span> </div> { isRemote && ( <Badge; variant="secondary"" " className="border-green-2 00 bg-green-5 0 text-green-7 00"" " >; Remote; </Badge> } </div> { /* Job Type, Experience, Salary * } / } <div className="flex flex-wrap items-center gap-2">" " <Badge; variant="outline""; " className= { cn(isFeatured; ? "border-orange-2 00 bg-orange-5 0 text-orange-7 00"" " : "border-[#2 d4, a3 ]e]/2 0 text-[#2 d4, a3 ]e]" } ")) } )" { type } </Badge> { experienceLevel && ( <Badge; variant="outline"" " className="border-[#ff6, b3 ]5]/2 0 text-[#ff6, b3 ]5]"" " > } { experienceLevel } </Badge> { salary && ( <div className="flex items-center gap-1 text-sm font-medium text-green-6 00">" " <DollarSign className="h-4 w-4" /> } " " <span> { salary } </span> </div> </div> { /* Description * } / } <p className="line-clamp-3 text-sm text-gray-6 00 leading-relaxed">" " { description } </p> { /* Analytics for (Featured Jobs * } / } )) ) { isFeatured && (viewCount || applicantCount() && ( <div className="flex items-center gap-4 text-xs text-gray-5 00 pt-2 border-t border-gray-1 00">" " { viewCount && ( <div className="flex items-center gap-1">" " <Eye className="h-3 w-3" /> } " " <span> { viewCount } views</span> </div> { applicantCount && ( <div className="flex items-center gap-1">" " <Users className="h-3 w-3" /> } " " <span> { applicantCount } applied</span> </div> </div> </div> { /* Footer * } / } <div className="flex items-center justify-between pt-4 border-t border-gray-1 00">" " <div className="flex items-center gap-1 text-xs text-gray-5 00">" " <Calendar className="h-3 w-3" />" "))) <span>Posted { formatPostedDate(postedAt } ) } </span> </div> <div className="flex items-center gap-2">" " { /* Quick Apply Button for (Featured Jobs * } / } ) { isFeatured && (; <Button; size="sm"" " variant="outline"" ") onClick= { (e() => {; e.stopPropagation(); window.open(applyUrl, '_blank', 'noopener, noreferrer'); } } className="border-yellow-3 00 text-yellow-7 00 hover:bg-yellow-5 0"" " >; Quick Apply; </Button> { /* View Details Button * } / } <Button; size="sm"" " onClick= { (e() => {; e.stopPropagation(); if ((onViewDetails() onViewDetails(); } } className= ) { cn(isFeatured; ? "bg-gradient-to-r from-yellow-5 00 to-orange-5 00 hover: from-yellow-6 00, hover:to-orange-6 00 text-white"" " : "bg-[#2 d4, a3 ]e], hover:bg-[#1 d3, a2 ]e] text-white" } ") } )" View Details; <ChevronRight className="ml-1 h-3 w-3" />" " </Button> </div> </div> { /* Subtle animation for (featured jobs * } / } ) { isFeatured && isHovered && ( <motion.div; className="absolute inset-0 rounded-2 xl bg-gradient-to-br from-yellow-4 00/1 0 via-transparent to-orange-4 00/1 0 pointer-events-none" } " " initial= { { opacity: 0 } } } animate= { { opacity: 1 } } } exit= { { opacity: 0 } } } transition= { { duration: 0.3 } } } </motion.article>; )))))))))) */