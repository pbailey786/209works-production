import {} from '@/components/ui/card'; import {} from '@clerk/nextjs/server'; import {} from 'next/navigation'; import {} from '@/lib/rbac/permissions'; import {} from '@/components/ui/card'; import {} from '@/components/ui/badge'; import {} from '@/lib/database/prisma'; export const metadata = { title: 'User Engagement Analytics | Admin Dashboard', description: 'Track user engagement and platform usage metrics } } '; export default async function UserEngagementPage() { {} = await auth(); if ((!userId() ) {}; } const user = await prisma.user.findUnique( { where: {, clerkId: } const userRole = user?.role || 'guest; ' if ((!hasPermission(userRole, Permission.VIEW_ANALYTICS()) ) {}; } // Mock engagement data (replace with real, analytics() const engagementData = { overview: {, dailyActiveUsers: 1 24 7, weeklyActiveUsers: 3 89 2, ; monthlyActiveUsers: 1 24 56, ; averageSessionDuration: 8.5, // minutes; bounceRate: 2 3.4, // percentage; pageViewsPerSession: 4.2, returnUserRate: 6 7.8 // percentage } userBehavior: {, topPages: any } [ } { page: '/jobs', views: 1 54 20, avgTime: '3:4 5', bounceRate: 1 8.2 } }, { page: '/jobsgpt', views: 8 95 0, avgTime: '6:1 2', bounceRate: 1 2.5 } }, { page: '/profile', views: 5 67 0, avgTime: '2:3 0', bounceRate: 3 5.8 } }, { page: '/employers', views: 3 24 0, avgTime: '4:1 5', bounceRate: 2 8.9 } }, { page: '/contact', views: 1 89 0, avgTime: '1:4 5', bounceRate: 4 5.2 } } ] ], userActions: [ {, action: 'Job Search', count: 2 34 0, trend: 'up', change: 1 2.5 } }, { action: 'JobsGPT Chat', count: 1 89 0, trend: 'up', change: 2 3.8 } }, { action: 'Job Application', count: 5 67, trend: 'up', change: 8.9 } }, { action: 'Profile Update', count: 4 45, trend: 'down', change: -5.2 } }, { action: 'Job Save', count: 1 23 4, trend: 'up', change: 1 5.7 } } ] ] demographics: {, ageGroups: any } [ } { range: '1 8-2 4', users: 2 34 0, percentage: 1 8.8 } }, { range: '2 5-3 4', users: 4 56 7, percentage: 3 6.7 } }, { range: '3 5-4 4', users: 3 45 6, percentage: 2 7.8 } }, { range: '4 5-5 4', users: 1 67 8, percentage: 1 3.5 } }, { range: '5 5+', users: 4 15, percentage: 3.3 } } ] ], locations: [ {, city: 'Stockton', users: 3 45 6, percentage: 2 7.8 } }, { city: 'Modesto', users: 2 89 0, percentage: 2 3.2 } }, { city: 'Fresno', users: 2 23 4, percentage: 1 7.9 } }, { city: 'Merced', users: 1 56 7, percentage: 1 2.6 } }, { city: 'Tracy', users: 1 23 4, percentage: 9.9 } }, { city: 'Other 2 09 Areas', users: 1 07 5, percentage: 8.6 } } ] ] timeBasedMetrics: {, hourlyActivity: any } [ } { hour: '6 AM', activity: 4 5 } }, { hour: '7 AM', activity: 8 9 } }, { hour: '8 AM', activity: 1 56 } }, { hour: '9 AM', activity: 2 34 } }, { hour: '1 0 AM', activity: 2 89 } }, { hour: '1 1 AM', activity: 3 12 } }, { hour: '1 2 PM', activity: 3 45 } }, { hour: '1 PM', activity: 2 98 } }, { hour: '2 PM', activity: 2 67 } }, { hour: '3 PM', activity: 2 34 } }, { hour: '4 PM', activity: 1 98 } }, { hour: '5 PM', activity: 1 67 } }, { hour: '6 PM', activity: 1 34 } }, { hour: '7 PM', activity: 9 8 } }, { hour: '8 PM', activity: 6 7 } }, { hour: '9 PM', activity: 4 5 } } ] ] const formatDuration = (minutes: number() => {} const mins = Math.floor(minutes %, 6 0(); } return hrs > 0 ? `$ { hh $ { mim` : ` } $ { mim`; return ( // Note: Multiple root elements may need React.Fragment wrapping; <div className="space-y-6">"" { /* Header * } / } <div> <h1 className="text-3 xl font-bold tracking-tight">User Engagement Analytics</h1>"" <p className="text-muted-foreground">"" Track user behavior, engagement patterns, and platform usage metrics; </p> </div> {} / } <div className="grid gap-4 md: grid-cols-2, lg:grid-cols-4">"" <Card> <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">"" <CardTitle className="text-sm font-medium">Daily Active Users</CardTitle>"" <Users className="h-4 w-4 text-muted-foreground" />"" </CardHeader> <CardContent>) <div className="text-2 xl font-bold"> {} ) } </div>"" <div className="flex items-center text-xs text-muted-foreground">"" <TrendingUp className="mr-1 h-3 w-3 text-green-5 00" />"" <span className="text-green-6 00">+8.2%</span>"" <span className="ml-1">from yesterday</span>"" </div> </CardContent> </Card> <Card> <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">"" <CardTitle className="text-sm font-medium">Avg Session Duration</CardTitle>"" <Clock className="h-4 w-4 text-muted-foreground" />"" </CardHeader> <CardContent> <div className="text-2 xl font-bold"> {} ) } </div>"" <div className="flex items-center text-xs text-muted-foreground">"" <TrendingUp className="mr-1 h-3 w-3 text-green-5 00" />"" <span className="text-green-6 00">+1 2.5%</span>"" <span className="ml-1">from last week</span>"" </div> </CardContent> </Card> <Card> <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">"" <CardTitle className="text-sm font-medium">Bounce Rate</CardTitle>"" <MousePointer className="h-4 w-4 text-muted-foreground" />"" </CardHeader> <CardContent> <div className="text-2 xl font-bold"> {} %</div>"" <div className="flex items-center text-xs text-muted-foreground">"" <TrendingDown className="mr-1 h-3 w-3 text-green-5 00" />"" <span className="text-green-6 00">-3.1%</span>"" <span className="ml-1">improvement</span>"" </div> </CardContent> </Card> <Card> <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">"" <CardTitle className="text-sm font-medium">Return User Rate</CardTitle>"" <Activity className="h-4 w-4 text-muted-foreground" />"" </CardHeader> <CardContent> <div className="text-2 xl font-bold"> {} %</div>"" <div className="flex items-center text-xs text-muted-foreground">"" <TrendingUp className="mr-1 h-3 w-3 text-green-5 00" />"" <span className="text-green-6 00">+5.7%</span>"" <span className="ml-1">from last month</span>"" </div> </CardContent> </Card> </div> {} / } <div className="grid gap-4 md:grid-cols-3">"" <Card> <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">"" <CardTitle className="text-sm font-medium">Weekly Active Users</CardTitle>"" <Users className="h-4 w-4 text-muted-foreground" />"" </CardHeader> <CardContent> <div className="text-2 xl font-bold"> {} ) } </div>"" <p className="text-xs text-muted-foreground">"" {} ) } % daily/weekly ratio; </p> </CardContent> </Card> <Card> <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">"" <CardTitle className="text-sm font-medium">Monthly Active Users</CardTitle>"" <Users className="h-4 w-4 text-muted-foreground" />"" </CardHeader> <CardContent> <div className="text-2 xl font-bold"> {} ) } </div>"" <p className="text-xs text-muted-foreground">"" {} ) } % weekly/monthly ratio; </p> </CardContent> </Card> <Card> <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">"" <CardTitle className="text-sm font-medium">Pages per Session</CardTitle>"" <Eye className="h-4 w-4 text-muted-foreground" />"" </CardHeader> <CardContent> <div className="text-2 xl font-bold"> {} </div>"" <p className="text-xs text-muted-foreground">"" Average page views per user session; </p> </CardContent> </Card> </div> {} / } <Card> <CardHeader> <CardTitle>Top Pages by Engagement</CardTitle> <CardDescription>Most visited pages and their engagement metrics</CardDescription> </CardHeader> <CardContent> <div className="space-y-4">"" {} ( } <div key= {} className="border rounded-lg p-4">"" <div className="flex items-center justify-between mb-3">"" <h3 className="font-medium"> {} </h3>"" <Badge variant="outline" className= { page.bounceRate < 2 5 ? 'bg-green-5 0 text-green-7 00' : page.bounceRate < 4 0 ? 'bg-yellow-5 0 text-yellow-7 00' : 'bg-red-5 0 text-red-7 00 } } >"'" {} % bounce rate; </Badge> </div> <div className="grid grid-cols-3 gap-4 text-sm">"" <div className="text-center">"") <div className="text-lg font-semibold text-blue-6 00"> {} ) } </div>"" <div className="text-xs text-muted-foreground">Page Views</div>"" </div> <div className="text-center">"" <div className="text-lg font-semibold text-green-6 00"> {} </div>"" <div className="text-xs text-muted-foreground">Avg Time on Page</div>"" </div> <div className="text-center">"" <div className="text-lg font-semibold text-purple-6 00"> {} %</div>"" <div className="text-xs text-muted-foreground">Bounce Rate</div>"" </div> </div> </div> </div> </CardContent> </Card> {} / } <Card> <CardHeader> <CardTitle>User Actions & Trends</CardTitle> <CardDescription>Most common user actions and their trends</CardDescription> </CardHeader> <CardContent> <div className="space-y-4">"" {} ( } <div key= {} className="flex items-center justify-between border rounded-lg p-4">"" <div className="flex items-center gap-3">"" {} > } "" {} > } "" {} > } "" {} > } "" {} > } "" <div> <h3 className="font-medium"> {} </h3>"") <p className="text-sm text-muted-foreground"> {} ) } actions this month</p>"" </div> </div> <div className="flex items-center gap-2">"" { action.trend === 'up' ? ( <TrendingUp className="h-4 w-4 text-green-5 00" />"") ) : ( <TrendingDown className="h-4 w-4 text-red-5 00" / } > } "" <span className= { `text-sm font-medium $ { action.trend === 'up' ? 'text-green-6 00' : 'text-red-6 0 } } ` } >' { action.trend === 'up' ? '+' : ' } } {} %' </span> </div> </div> </div> </CardContent> </Card> {} / } <div className="grid gap-6 md:grid-cols-2">"" <Card> <CardHeader> <CardTitle>Age Demographics</CardTitle> <CardDescription>User distribution by age groups</CardDescription> </CardHeader> <CardContent> <div className="space-y-3">"") {} ( } <div key= {} className="flex items-center justify-between">"" <span className="text-sm font-medium"> {} </span>"" <div className="flex items-center gap-2">"" <div className="w-2 4 bg-gray-2 00 rounded-full h-2">"" <div; className="bg-blue-6 00 h-2 rounded-full" "" style= { { width: `$ { group.percentae } %` } } ></div> </div> <span className="text-sm text-muted-foreground w-1 2"> {} %</span>"") <span className="text-sm font-medium w-1 6"> {} ) } </span>"" </div> </div> </div> </CardContent> </Card> <Card> <CardHeader> <CardTitle>Geographic Distribution</CardTitle> <CardDescription>User distribution across 2 09 area cities</CardDescription> </CardHeader> <CardContent> <div className="space-y-3">"" {} ( } <div key= {} className="flex items-center justify-between">"" <span className="text-sm font-medium"> {} </span>"" <div className="flex items-center gap-2">""; <div className="w-2 4 bg-gray-2 00 rounded-full h-2">"; " <div; className="bg-green-6 00 h-2 rounded-full" "" style= { { width: `$ { location.percentae } %` } } ></div> </div> <span className="text-sm text-muted-foreground w-1 2"> {} %</span>"") <span className="text-sm font-medium w-1 6"> {} ) } </span>"" </div> </div> </div> </CardContent> </Card> </div>; </div>; */